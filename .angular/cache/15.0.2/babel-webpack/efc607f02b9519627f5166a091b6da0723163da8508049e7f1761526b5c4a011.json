{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./alert\";\nimport * as i2 from \"../services/conn-api/conn-api.service\";\nexport let Downloads = /*#__PURE__*/(() => {\n  class Downloads {\n    constructor(Alert, Api) {\n      this.Alert = Alert;\n      this.Api = Api;\n      // Urls\n      this.urlInformationForCollector = 'download/document/informations_for_collector';\n      this.urlBecomeCollector = 'download/document/become_collector';\n      this.urlTermsOfUse = 'agreement/terms_of_use/';\n      this.urlPrivacyPolicy = 'agreement/privacy_policy/';\n    }\n    informationForCollector() {\n      this.Api.getFile(this.urlInformationForCollector).subscribe(response => {\n        console.log(response);\n        let blob = new Blob([response], {\n          type: 'application/pdf'\n        });\n        const url = window.URL.createObjectURL(blob);\n        window.open(url);\n        this.Alert.popUp('Informationen für Sammler').then(res => {\n          if (!res) window.open(url);\n        });\n      });\n    }\n    becomeCollector() {\n      this.Api.getFile(this.urlBecomeCollector).subscribe(response => {\n        console.log(response);\n        let blob = new Blob([response], {\n          type: 'application/pdf'\n        });\n        const url = window.URL.createObjectURL(blob);\n        window.open(url);\n        this.Alert.popUp('Sammler werden').then(res => {\n          if (!res) window.open(url);\n        });\n      });\n    }\n    privacyPolicyCollector() {\n      this.Api.getFile(this.urlPrivacyPolicy + 1).subscribe(response => {\n        console.log(response);\n        let blob = new Blob([response], {\n          type: 'application/pdf'\n        });\n        const url = window.URL.createObjectURL(blob);\n        window.open(url);\n        this.Alert.popUp('Datenschutzerklärung').then(res => {\n          if (!res) window.open(url);\n        });\n      });\n    }\n    termsOfUseCollector() {\n      this.Api.getFile(this.urlTermsOfUse + 1).subscribe(response => {\n        console.log(response);\n        let blob = new Blob([response], {\n          type: 'application/pdf'\n        });\n        const url = window.URL.createObjectURL(blob);\n        window.open(url);\n        this.Alert.popUp('Nutzungsbedingungen').then(res => {\n          if (!res) window.open(url);\n        });\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  Downloads.ɵfac = function Downloads_Factory(t) {\n    return new (t || Downloads)(i0.ɵɵinject(i1.Alert), i0.ɵɵinject(i2.ConnApiService));\n  };\n  Downloads.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Downloads,\n    factory: Downloads.ɵfac\n  });\n  return Downloads;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
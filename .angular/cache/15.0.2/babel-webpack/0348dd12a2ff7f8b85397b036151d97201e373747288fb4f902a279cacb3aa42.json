{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { environment } from '../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../services/conn-api/conn-api.service\";\nfunction RequestPage_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Pflichtfeld\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestPage_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Fehlerhafte Eingabe\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RequestPage_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Maximal-L\\u00E4nge von \", ctx_r2.maxInput, \" Zeichen \\u00FCberschritten\");\n  }\n}\nexport let RequestPage = /*#__PURE__*/(() => {\n  class RequestPage {\n    constructor(router, alertController, activatedRoute, fb, connApi) {\n      this.router = router;\n      this.alertController = alertController;\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.connApi = connApi;\n      //Constants\n      this.maxInput = environment.maxInput;\n      // Urls\n      this.urlPasswordRequest = \"password/request\";\n      // Variables\n      this.bSubmitted = false;\n      this.role = null;\n      // FormBuilder\n      this.formGroup = this.fb.group({\n        cEmail: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z0-9._%+-]{2,15}$'), Validators.maxLength(this.maxInput)]]\n      });\n    }\n    ngOnInit() {\n      this.activatedRoute.params.subscribe(params => {\n        if (params.role != null && (params.role == 0 || params.role == 1)) {\n          this.role = params.role;\n        } else {\n          this.router.navigate(['app-root']);\n        }\n      });\n    }\n    get errorControl() {\n      return this.formGroup.controls;\n    }\n    onMail() {\n      this.bSubmitted = true;\n      // check for invalid input\n      if (!this.formGroup.valid) {\n        return;\n      }\n      // prepare\n      let data = {\n        'role': this.role,\n        'email': this.formGroup.get('cEmail').value\n      };\n      // send\n      this.connApi.post(this.urlPasswordRequest, data).subscribe(data => {\n        console.log(\"hier\");\n        console.log(data.status);\n        if (data.status == 200) {\n          console.log(\"jo??)\");\n          this.alertCheckEmail();\n        }\n      }, error => {\n        console.log(error);\n        if (error.status == 400) {\n          this.alertUnknownEmail();\n        }\n      });\n    }\n    alertCheckEmail() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-alert',\n          header: 'E-Mail versendet',\n          message: 'Bitte öffne die an Dich versendete E-Mail, um dein Passwort zurückzusetzen.',\n          buttons: [{\n            text: 'Ok',\n            handler: () => {\n              this.router.navigate(['app-root']);\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n    alertUnknownEmail() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-alert',\n          header: 'Ungültige Eingabe',\n          subHeader: 'E-Mail-Adresse unbekannt',\n          message: 'In unserer Datenbank existiert kein ' + (this.role == 0 ? 'Sammler' : 'Partner') + ' mit dieser E-Mail Adresse.',\n          buttons: ['Ok', {\n            text: 'Ich bin ein ' + (this.role == 1 ? 'Partner' : 'Sammler'),\n            handler: () => {\n              this.role = this.role == 1 ? 0 : 1;\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n  }\n  RequestPage.ɵfac = function RequestPage_Factory(t) {\n    return new (t || RequestPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ConnApiService));\n  };\n  RequestPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RequestPage,\n    selectors: [[\"app-request\"]],\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"toolbar-subtitle\"], [1, \"input-background\"], [1, \"block-element-single\"], [3, \"formGroup\"], [1, \"ion-row-center\"], [\"size-xl\", \"6\", \"size-lg\", \"6\", \"size-md\", \"12\", \"size-sm\", \"12\", \"size-xs\", \"12\"], [\"lines\", \"full\"], [\"position\", \"floating\", 1, \"input-label\"], [\"rows\", \"1\", \"auto-grow\", \"true\", \"type\", \"text\", \"formControlName\", \"cEmail\"], [\"class\", \"input-invalid\", 4, \"ngIf\"], [1, \"ion-button-one-inside\", 3, \"click\"], [1, \"input-invalid\"]],\n    template: function RequestPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Handysammlerportal \");\n        i0.ɵɵelementStart(4, \"p\", 0);\n        i0.ɵɵtext(5, \"Passwort vergessen\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 1)(7, \"ion-grid\")(8, \"div\", 2)(9, \"form\", 3)(10, \"ion-row\", 4)(11, \"ion-col\", 5)(12, \"ion-item\", 6)(13, \"ion-label\", 7);\n        i0.ɵɵtext(14, \"E-Mail Adresse\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"ion-textarea\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, RequestPage_span_16_Template, 2, 0, \"span\", 9);\n        i0.ɵɵtemplate(17, RequestPage_span_17_Template, 2, 0, \"span\", 9);\n        i0.ɵɵtemplate(18, RequestPage_span_18_Template, 2, 1, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ion-col\", 5)(20, \"ion-button\", 10);\n        i0.ɵɵlistener(\"click\", function RequestPage_Template_ion_button_click_20_listener() {\n          return ctx.onMail();\n        });\n        i0.ɵɵtext(21, \"Passwort zur\\u00FCcksetzen\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.bSubmitted && (ctx.errorControl.cEmail.errors == null ? null : ctx.errorControl.cEmail.errors.required));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bSubmitted && (ctx.errorControl.cEmail.errors == null ? null : ctx.errorControl.cEmail.errors.pattern));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bSubmitted && (ctx.errorControl.cEmail.errors == null ? null : ctx.errorControl.cEmail.errors.maxlength));\n      }\n    },\n    styles: [\"[_nghost-%COMP%]   .item-interactive.ion-invalid[_ngcontent-%COMP%]{--highlight-background: #FF !important}[_nghost-%COMP%]   .item-interactive.ion-valid[_ngcontent-%COMP%]{--highlight-background: #FF !important}\"]\n  });\n  return RequestPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
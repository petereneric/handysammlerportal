{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../../services/conn-api/conn-api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/material/tooltip\";\nimport * as i5 from \"@angular/material/icon\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nexport let SettingsPage = /*#__PURE__*/(() => {\n  class SettingsPage {\n    constructor(connApi) {\n      this.connApi = connApi;\n      // Urls\n      this.urlSettings = 'collector/settings';\n      // Variables\n      this.bStatistics = null;\n    }\n    ngOnInit() {\n      this.connApi.safeGet(this.urlSettings).subscribe(response => {\n        let data = response.body;\n        this.bStatistics = data.bStatistics == 1;\n      });\n    }\n    onChange() {\n      console.log(\"jo\");\n      this.save();\n    }\n    save() {\n      // prepare\n      let data = {\n        bStatistics: this.bStatistics ? 1 : 0\n      };\n      // send\n      this.connApi.safePost(this.urlSettings, data).subscribe(response => {\n        console.log(response);\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n  SettingsPage.ɵfac = function SettingsPage_Factory(t) {\n    return new (t || SettingsPage)(i0.ɵɵdirectiveInject(i1.ConnApiService));\n  };\n  SettingsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsPage,\n    selectors: [[\"app-settings\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"input-background\"], [1, \"block-element-single\"], [1, \"block-head\"], [1, \"text-head\"], [\"type\", \"button\", \"matTooltip\", \"Deine Daten werden mit deiner Zustimmung u.a. auf der Website von Mobile-Box sowie hier im Handysammlerportal ver\\u00F6ffentlicht und damit f\\u00FCr andere sichtbar\", 1, \"icon-head\", 3, \"click\"], [\"tooltip\", \"matTooltip\"], [\"size-xl\", \"6\", \"size-lg\", \"6\", \"size-md\", \"12\", \"size-sm\", \"12\", \"size-xs\", \"12\"], [1, \"ion-item-toggle-check\"], [1, \"ion-label-toggle\"], [3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\", \"ionChange\"]],\n    template: function SettingsPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"ion-grid\")(2, \"div\", 1)(3, \"div\", 2)(4, \"span\", 3);\n        i0.ɵɵtext(5, \"Ver\\u00F6ffentlichung folgender Daten erlauben\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-icon\", 4, 5);\n        i0.ɵɵlistener(\"click\", function SettingsPage_Template_mat_icon_click_6_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(7);\n          return i0.ɵɵresetView(_r0.toggle());\n        });\n        i0.ɵɵtext(8, \"info \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"ion-row\")(10, \"ion-col\", 6)(11, \"ion-item\", 7)(12, \"ion-label\", 8);\n        i0.ɵɵtext(13, \"Sammelzahlen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-toggle\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function SettingsPage_Template_ion_toggle_ngModelChange_14_listener($event) {\n          return ctx.bStatistics = $event;\n        })(\"ionChange\", function SettingsPage_Template_ion_toggle_ionChange_14_listener() {\n          return ctx.onChange();\n        });\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.bStatistics)(\"ngModelOptions\", i0.ɵɵpureFunction0(2, _c0));\n      }\n    },\n    dependencies: [i2.NgControlStatus, i2.NgModel, i3.IonCol, i3.IonContent, i3.IonGrid, i3.IonItem, i3.IonLabel, i3.IonRow, i3.IonToggle, i3.BooleanValueAccessor, i4.MatTooltip, i5.MatIcon]\n  });\n  return SettingsPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
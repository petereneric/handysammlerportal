{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../services/conn-api/conn-api.service\";\nexport let VerificationPage = /*#__PURE__*/(() => {\n  class VerificationPage {\n    constructor(toastController, router, connApi) {\n      this.toastController = toastController;\n      this.router = router;\n      this.connApi = connApi;\n      this.urlRegistrationMail = \"registration/mail\";\n    }\n    ngOnInit() {\n      let token = localStorage.getItem('token');\n      if (token != null) {\n        let tokenInfo = jwt_decode(token);\n        let bVerified = tokenInfo['bVerified'];\n        if (bVerified == 1) this.router.navigate(['app-root']);\n      } else {\n        this.router.navigate(['login']);\n      }\n    }\n    mailVerification() {\n      this.connApi.safePost(this.urlRegistrationMail, null).subscribe(data => {\n        if (data.status == 200) {\n          console.log(data);\n          this.toastSent();\n        }\n      }, error => {\n        if (error.status == 412) {\n          this.toastConfirmed();\n          localStorage.removeItem('token');\n          this.router.navigate(['login']);\n        }\n        console.log(error.message);\n      });\n    }\n    confirmVerification() {\n      localStorage.removeItem('token');\n      this.router.navigate(['login']);\n    }\n    // Toasts\n    toastSent() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: 'E-Mail wurde versendet',\n          duration: 2500,\n          cssClass: 'my-toast',\n          position: 'bottom'\n        });\n        yield toast.present();\n      });\n    }\n    toastConfirmed() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message: 'Deine E-Mail Adresse wurde bereits bestätigt',\n          duration: 2500,\n          cssClass: 'my-toast',\n          position: 'bottom'\n        });\n        yield toast.present();\n      });\n    }\n  }\n  VerificationPage.ɵfac = function VerificationPage_Factory(t) {\n    return new (t || VerificationPage)(i0.ɵɵdirectiveInject(i1.ToastController), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ConnApiService));\n  };\n  VerificationPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VerificationPage,\n    selectors: [[\"app-verification\"]],\n    decls: 22,\n    vars: 0,\n    consts: [[1, \"toolbar-subtitle\"], [1, \"input-background\"], [1, \"block-element-single\"], [1, \"block-head\"], [1, \"text-head\"], [1, \"block-text\"], [1, \"text-secondary\"], [1, \"ion-row-buttons\"], [1, \"ion-button-one-inside\", 3, \"click\"], [1, \"ion-button-three-inside\", 3, \"click\"]],\n    template: function VerificationPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Handysammlerportal \");\n        i0.ɵɵelementStart(4, \"p\", 0);\n        i0.ɵɵtext(5, \"E-Mail-Adresse best\\u00E4tigen\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 1)(7, \"ion-grid\")(8, \"div\", 2)(9, \"div\", 3)(10, \"span\", 4);\n        i0.ɵɵtext(11, \"Fast geschafft\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"span\", 6);\n        i0.ɵɵtext(14, \"Wir freuen uns \\u00FCber deine Anmeldung und dein Engagement. Um deine Registrierung als Sammler abzuschlie\\u00DFen zu k\\u00F6nnen, bitten wir dich deine E-Mail-Adresse zu best\\u00E4tigen. \\u00D6ffne dazu bitte die E-Mail, die wir dir zugesendet haben und folge den dort enthaltenen Anweisungen.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"ion-row\", 7)(16, \"ion-col\")(17, \"ion-button\", 8);\n        i0.ɵɵlistener(\"click\", function VerificationPage_Template_ion_button_click_17_listener() {\n          return ctx.mailVerification();\n        });\n        i0.ɵɵtext(18, \"E-Mail erneut zusenden\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"ion-col\")(20, \"ion-button\", 9);\n        i0.ɵɵlistener(\"click\", function VerificationPage_Template_ion_button_click_20_listener() {\n          return ctx.confirmVerification();\n        });\n        i0.ɵɵtext(21, \"E-Mail bereits best\\u00E4tigt\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n    },\n    dependencies: [i1.IonButton, i1.IonCol, i1.IonContent, i1.IonGrid, i1.IonHeader, i1.IonRow, i1.IonToolbar, i1.IonTitle]\n  });\n  return VerificationPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
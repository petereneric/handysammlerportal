{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth-api/auth-api.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuardService = /*#__PURE__*/(() => {\n  class AuthGuardService {\n    constructor(authApiService, router) {\n      this.authApiService = authApiService;\n      this.router = router;\n    }\n    canActivate(r) {\n      console.log(\"hier haut er raus\");\n      //var currentUser = JSON.parse(localStorage.getItem('token'));\n      //var token = currentUser.token;\n      return new Promise(resolve => {\n        this.authApiService.authenticate().subscribe(response => {\n          //Log\n          console.log('AuthGuard passed');\n          console.log(response.headers.get('authorization'));\n          // Save token\n          localStorage.setItem('token', response.headers.get('authorization'));\n          // return to router\n          resolve(true);\n        }, error => {\n          console.log(\"jo\");\n          console.log(error.status);\n          switch (error.status) {\n            case 401:\n            case 440:\n              console.log('AuthGuard not passed - Navigate to login');\n              this.router.navigate(['login']);\n              break;\n            case 412:\n              console.log(\"AuthGuard not passed - Navigate to verification\");\n              this.router.navigate(['verification']);\n              break;\n            case 451:\n              console.log(\"navigate to agreement page\");\n              this.router.navigate(['agreement']);\n              break;\n          }\n          console.log(error);\n          resolve(false);\n        });\n      });\n    }\n  }\n  AuthGuardService.ɵfac = function AuthGuardService_Factory(t) {\n    return new (t || AuthGuardService)(i0.ɵɵinject(i1.AuthApiService), i0.ɵɵinject(i2.Router));\n  };\n  AuthGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuardService,\n    factory: AuthGuardService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuardService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Downloads } from '../../../../utilities/downloads';\nimport { Alert } from '../../../../utilities/alert';\nimport { environment } from '../../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../utilities/downloads\";\nimport * as i2 from \"../../../../utilities/toast\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../../services/conn-api/conn-api.service\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"../../../../components/footer/footer.component\";\nconst _c0 = [\"vName\"];\nconst _c1 = [\"vNameDetails\"];\nconst _c2 = [\"vStreet\"];\nconst _c3 = [\"vStreetNumber\"];\nconst _c4 = [\"vCity\"];\nconst _c5 = [\"vZip\"];\nconst _c6 = [\"vPrename\"];\nconst _c7 = [\"vSurname\"];\nconst _c8 = [\"vEmail\"];\nconst _c9 = [\"vEmailCC\"];\nconst _c10 = [\"vPhoneFixedLine\"];\nconst _c11 = [\"vPhoneMobile\"];\nconst _c12 = [\"vShippingAddressOne\"];\nconst _c13 = [\"vShippingAddressTwo\"];\nconst _c14 = [\"vShippingAddressThree\"];\nconst _c15 = [\"vShippingStreet\"];\nconst _c16 = [\"vShippingStreetNumber\"];\nconst _c17 = [\"vShippingZip\"];\nconst _c18 = [\"vShippingCity\"];\nexport let RegistrationFormPage = /*#__PURE__*/(() => {\n  class RegistrationFormPage {\n    // private activatedRoute: ActivatedRoute\n    constructor(Downloads, uToast, activatedRoute, fb, connApi, alertController, router) {\n      this.Downloads = Downloads;\n      this.uToast = uToast;\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.connApi = connApi;\n      this.alertController = alertController;\n      this.router = router;\n      // Constants\n      this.maxZip = environment.maxZip;\n      this.maxInput = environment.maxInput;\n      this.maxPassword = environment.maxPassword;\n      // Urls\n      this.urlTypes = 'types';\n      this.urlRegionStates = 'region/states/';\n      this.urlRegionCountries = 'region/countries';\n      this.urlRegister = 'registration/collector';\n      this.urlPartner = 'partner';\n      this.urlPartners = 'partner'; // next update set partners, also change in api\n      this.urlBecomeCollector = 'download/document/become_collector';\n      this.urlMailRegistration = 'registration/mail';\n      this.urlTermsOfUse = 'agreement/terms_of_use/';\n      this.urlPrivacyPolicy = 'agreement/privacy_policy/';\n      // FormBuilder\n      this.fgCollector = this.fb.group({\n        cName: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cNameDetails: ['', [Validators.maxLength(this.maxInput)]],\n        cStreet: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cStreetNumber: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cZip: ['', [Validators.required, Validators.minLength(this.maxZip), Validators.maxLength(this.maxZip)]],\n        cCity: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cPassword: ['', [Validators.required, Validators.pattern(environment.patternPassword), Validators.minLength(8)]],\n        cPrename: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cSurname: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cEmail: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z0-9._%+-]{2,15}$'), Validators.maxLength(this.maxInput)]],\n        cEmailCC: ['', [Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z0-9._%+-]{2,15}$'), Validators.maxLength(this.maxInput)]],\n        cPhoneFixedLine: ['', [Validators.maxLength(this.maxInput)]],\n        cPhoneMobile: ['', [Validators.maxLength(this.maxInput)]],\n        cShippingAddressOne: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cShippingAddressTwo: ['', [Validators.maxLength(this.maxInput)]],\n        cShippingAddressThree: ['', [Validators.maxLength(this.maxInput)]],\n        cShippingStreet: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cShippingStreetNumber: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cShippingCity: ['', [Validators.required, Validators.maxLength(this.maxInput)]],\n        cShippingZip: ['', [Validators.required, Validators.minLength(this.maxZip), Validators.maxLength(this.maxZip)]]\n      });\n      // Variables\n      this.cType = null;\n      this.oType = null;\n      this.lTypes = [];\n      this.lTitles = [{\n        cName: 'Herr'\n      }, {\n        cName: 'Frau'\n      }, {\n        cName: 'Herr Dr.'\n      }, {\n        cName: 'Frau Dr.'\n      }];\n      this.oTitle = null;\n      this.bPersonally = true;\n      this.lCountries = [];\n      this.oCountry = null;\n      this.oShippingCountry = null;\n      this.lStates = [];\n      this.oState = null;\n      this.oPartner = null;\n      this.bPartnerAdmin = false;\n      this.passwordIcon = 'eye-off';\n      this.bSubmitted = false;\n      this.bAddressIdentical = false;\n      this.bShowPassword = false;\n      this.bChangePartner = true;\n      this.bConditions = false;\n      this.bSecurity = false;\n      this.compareWithFn = (o1, o2) => {\n        return o1 && o2 ? o1.id === o2.id : o1 === o2;\n      };\n      this.compareWith = this.compareWithFn;\n    }\n    ngOnInit() {\n      //this.fgCollector.controls['cName'].setValue('test'); Hat keinen Einfluss\n      // types\n      this.connApi.get(this.urlTypes).subscribe(data => {\n        this.lTypes = data.body;\n      });\n      // partner\n      this.connApi.get(this.urlPartners).subscribe(response => {\n        this.lPartner = response.body;\n      });\n      this.activatedRoute.params.subscribe(params => {\n        if (params.id != null && params.id != 0) {\n          this.connApi.get(this.urlPartner + '/' + params.id).subscribe(response => {\n            if (response.body != null) {\n              this.oPartner = response.body;\n              this.bChangePartner = false;\n            }\n          }, error => {\n            console.log(error);\n          });\n        }\n      });\n      // region\n      this.connApi.get(this.urlRegionCountries).subscribe(response => {\n        console.log(response);\n        this.lCountries = response.body;\n        this.oCountry = this.lCountries[0];\n        this.oShippingCountry = this.lCountries[0];\n        this.loadStates(this.oCountry.id);\n      });\n    }\n    getFormValidationErrors() {\n      Object.keys(this.fgCollector.controls).forEach(key => {\n        const controlErrors = this.fgCollector.get(key).errors;\n        if (controlErrors != null) {\n          Object.keys(controlErrors).forEach(keyError => {\n            console.log('Key control: ' + key + ', keyError: ' + keyError + ', err value: ', controlErrors[keyError]);\n          });\n        }\n      });\n    }\n    register() {\n      this.bSubmitted = true;\n      // check for invalid input\n      if (!this.fgCollector.valid || this.oType == null || this.oState == null || this.oCountry == null || this.oShippingCountry == null || this.oTitle == null) {\n        this.getFormValidationErrors();\n        this.alertInvalid();\n        return;\n      }\n      let collector = {\n        cName: this.fgCollector.get('cName').value,\n        cNameDetails: this.fgCollector.get('cNameDetails').value,\n        cStreet: this.fgCollector.get('cStreet').value,\n        cStreetNumber: this.fgCollector.get('cStreetNumber').value,\n        cZip: this.fgCollector.get('cZip').value,\n        cCity: this.fgCollector.get('cCity').value,\n        kState: this.oState.id,\n        kCountry: this.oCountry.id,\n        cPassword: this.fgCollector.get('cPassword').value,\n        kType: this.oType.id,\n        cSurname: this.fgCollector.get('cSurname').value,\n        cPrename: this.fgCollector.get('cPrename').value,\n        bFormally: !this.bPersonally ? 1 : 0,\n        cTitle: this.oTitle.cName,\n        cEmail: this.fgCollector.get('cEmail').value,\n        cEmailCC: this.fgCollector.get('cEmailCC').value,\n        cPhoneFixedLine: this.fgCollector.get('cPhoneFixedLine').value,\n        cPhoneMobile: this.fgCollector.get('cPhoneMobile').value,\n        cShippingAddressOne: this.fgCollector.get('cShippingAddressOne').value,\n        cShippingAddressTwo: this.fgCollector.get('cShippingAddressTwo').value,\n        cShippingAddressThree: this.fgCollector.get('cShippingAddressThree').value,\n        cShippingStreet: this.fgCollector.get('cShippingStreet').value,\n        cShippingStreetNumber: this.fgCollector.get('cShippingStreetNumber').value,\n        cShippingCity: this.fgCollector.get('cShippingCity').value,\n        cShippingZip: this.fgCollector.get('cShippingZip').value,\n        kShippingCountry: this.oCountry.id,\n        kPartner: this.oPartner == null ? 13 : this.oPartner.id\n      };\n      console.log(collector);\n      this.connApi.post(this.urlRegister, collector).subscribe(data => {\n        if (data.status == 200) {\n          console.log(data);\n          this.uToast.successfulRegistration();\n          //this.mailVerification()\n          localStorage.setItem('token', null);\n          this.router.navigate(['app-root']);\n        }\n      }, error => {\n        if (error.status == 406) {\n          this.alertCollectorNameForgiven();\n        }\n        if (error.status == 409) {\n          this.alertCollectorNameForgiven();\n        }\n        if (error.status == 429) {\n          this.alertMax();\n        }\n      });\n    }\n    onToggleFormally($event) {\n      console.log($event['detail']['checked']);\n      //this.bFormally = !$event['detail']['checked'];\n    }\n\n    showPassword() {\n      this.bShowPassword = !this.bShowPassword;\n    }\n    mailVerification() {\n      this.connApi.safePost(this.urlMailRegistration, null).subscribe(data => {\n        if (data.status == 200) {\n          console.log('Verification mail sent');\n        }\n      }, error => {\n        console.log(error.message);\n      });\n    }\n    // Address\n    onChangeAddress() {\n      if (this.bAddressIdentical) {\n        console.log('läuft');\n        this.fgCollector.controls['cShippingAddressOne'].setValue(this.fgCollector.get('cName').value);\n        this.fgCollector.controls['cShippingAddressTwo'].setValue(this.fgCollector.get('cNameDetails').value);\n        this.fgCollector.controls['cShippingAddressThree'].setValue(this.fgCollector.get('cPrename').value !== '' && this.fgCollector.get('cSurname').value !== '' ? 'z.H. ' + this.fgCollector.get('cPrename').value + ' ' + this.fgCollector.get('cSurname').value : '');\n        this.fgCollector.controls['cShippingStreet'].setValue(this.fgCollector.get('cStreet').value);\n        this.fgCollector.controls['cShippingStreetNumber'].setValue(this.fgCollector.get('cStreetNumber').value);\n        this.fgCollector.controls['cShippingZip'].setValue(this.fgCollector.get('cZip').value);\n        this.fgCollector.controls['cShippingCity'].setValue(this.fgCollector.get('cCity').value);\n        this.oShippingCountry = this.oCountry;\n      }\n    }\n    onAddress($event) {\n      this.bAddressIdentical = $event['detail']['checked'];\n      this.onChangeAddress();\n    }\n    onChangeCondtions($event) {\n      this.bConditions = $event['detail']['checked'];\n    }\n    onChangeSecurity($event) {\n      this.bSecurity = $event['detail']['checked'];\n    }\n    // Load\n    loadStates($kCountry) {\n      this.connApi.get(this.urlRegionStates + $kCountry).subscribe(response => {\n        this.lStates = response.body;\n        console.log(response.body);\n      });\n    }\n    get errorControl() {\n      return this.fgCollector.controls;\n    }\n    // Alert\n    alertPasswordNotIdentical() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-alert',\n          header: 'Passwort',\n          subHeader: 'Passwörter stimmen nicht überein',\n          message: 'Bitte geben Sie beide Passwörter erneut ein.',\n          buttons: ['ok']\n        });\n        yield alert.present();\n      });\n    }\n    alertEmailNotIdentical() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-alert',\n          header: 'E-Mail',\n          subHeader: 'E-Mail Adressen stimmen nicht überein',\n          message: 'Bitte geben Sie beide E-Mail Adressen erneut ein. Die E-Mail Adresse in CC ist selbstverständlich eine andere wenn vorhanden.',\n          buttons: ['Ok']\n        });\n        yield alert.present();\n      });\n    }\n    alertPasswordTooShort() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-alert',\n          header: 'Passwort',\n          subHeader: 'Passwort zu kurz',\n          message: 'Bitte geben Sie ein Passwort mit mindestens 8 Zeichen ein',\n          buttons: ['Ok']\n        });\n        yield alert.present();\n      });\n    }\n    alertCollectorNameForgiven() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-alert',\n          header: 'Ungültige Eingabe',\n          subHeader: 'Sammlername vergeben',\n          message: 'Dieser Sammler existiert bereits - Eine Registrierung ist daher nicht möglich.',\n          buttons: ['Ok']\n        });\n        yield alert.present();\n      });\n    }\n    alertEmailForgiven() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-alert',\n          header: 'Ungültige Eingabe',\n          subHeader: 'E-Mail Adresse vergeben',\n          message: 'Bitte gib eine andere E-Mail Adresse ein.',\n          buttons: ['Ok']\n        });\n        yield alert.present();\n      });\n    }\n    alertMax() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-alert',\n          header: 'Registrierung',\n          subHeader: 'Limit überschritten',\n          message: 'Leider wurde für heute das Limit möglicher Registrierungen überschritten. Bitte probiere es morgen erneut.',\n          buttons: ['Ok']\n        });\n        yield alert.present();\n      });\n    }\n    alertInvalid() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: 'my-alert',\n          header: 'Ungültige Eingabe',\n          message: 'Bitte überprüfe deine Daten und korrigiere diese an den markierten Stellen.',\n          buttons: ['Ok']\n        });\n        yield alert.present();\n      });\n    }\n    onRegister() {}\n    // Password\n    passwordInactive() {\n      return this.fgCollector.get('cPassword').value.length == 0;\n    }\n    passwordLength() {\n      return this.fgCollector.get('cPassword').value.length >= 8;\n    }\n    passwordBigSmall() {\n      let regex = new RegExp('(?=.*[a-z])(?=.*[A-Z])');\n      return regex.test(this.fgCollector.get('cPassword').value);\n    }\n    passwordNumber() {\n      let regex = new RegExp('(?=.*[1-9])');\n      return regex.test(this.fgCollector.get('cPassword').value);\n    }\n    passwordExtra() {\n      let regex = new RegExp('(?=.*[§#@$!%*?&<>])');\n      return regex.test(this.fgCollector.get('cPassword').value);\n    }\n    changeConditions() {\n      this.bConditions = !this.bConditions;\n    }\n    changeSecurity() {\n      this.bSecurity = !this.bSecurity;\n    }\n    onInfo() {\n      console.log('test');\n      this.connApi.getFile(this.urlBecomeCollector).subscribe(response => {\n        console.log(response);\n        let blob = new Blob([response], {\n          type: 'application/pdf'\n        });\n        const url = window.URL.createObjectURL(blob);\n        window.open(url);\n      }, error => {\n        console.log(error);\n      });\n    }\n    onTermsOfUse() {\n      this.Downloads.termsOfUseCollector();\n    }\n    onPrivacyPolicy() {\n      this.Downloads.privacyPolicyCollector();\n    }\n    ngAfterViewInit() {\n      this.vName.ionChange.subscribe(() => {\n        this.vName.autoGrow = true;\n      });\n      this.vNameDetails.ionChange.subscribe(() => {\n        console.log(\"hiiddddier\");\n        this.vNameDetails.autoGrow = true;\n      });\n      this.vStreet.ionChange.subscribe(() => {\n        if (this.vStreet.autoGrow == false) {\n          this.vStreet.autoGrow = true;\n        }\n      });\n      this.vStreetNumber.ionChange.subscribe(() => {\n        if (this.vStreetNumber.autoGrow == false) {\n          this.vStreetNumber.autoGrow = true;\n        }\n      });\n      this.vCity.ionChange.subscribe(() => {\n        if (this.vCity.autoGrow == false) {\n          this.vCity.autoGrow = true;\n        }\n      });\n      this.vZip.ionChange.subscribe(() => {\n        if (this.vZip.autoGrow == false) {\n          this.vZip.autoGrow = true;\n        }\n      });\n      this.vPrename.ionChange.subscribe(() => {\n        if (this.vPrename.autoGrow == false) {\n          this.vPrename.autoGrow = true;\n        }\n      });\n      this.vSurname.ionChange.subscribe(() => {\n        if (this.vSurname.autoGrow == false) {\n          this.vSurname.autoGrow = true;\n        }\n      });\n      this.vEmail.ionChange.subscribe(() => {\n        if (this.vEmail.autoGrow == false) {\n          this.vEmail.autoGrow = true;\n        }\n      });\n      this.vEmailCC.ionChange.subscribe(() => {\n        if (this.vEmailCC.autoGrow == false) {\n          this.vEmailCC.autoGrow = true;\n        }\n      });\n      this.vPhoneFixedLine.ionChange.subscribe(() => {\n        if (this.vPhoneFixedLine.autoGrow == false) {\n          this.vPhoneFixedLine.autoGrow = true;\n        }\n      });\n      this.vPhoneMobile.ionChange.subscribe(() => {\n        if (this.vPhoneMobile.autoGrow == false) {\n          this.vPhoneMobile.autoGrow = true;\n        }\n      });\n      this.vShippingAddressOne.ionChange.subscribe(() => {\n        if (this.vShippingAddressOne.autoGrow == false) {\n          this.vShippingAddressOne.autoGrow = true;\n        }\n      });\n      this.vShippingAddressTwo.ionChange.subscribe(() => {\n        if (this.vShippingAddressTwo.autoGrow == false) {\n          this.vShippingAddressTwo.autoGrow = true;\n        }\n      });\n      this.vShippingAddressThree.ionChange.subscribe(() => {\n        if (this.vShippingAddressThree.autoGrow == false) {\n          this.vShippingAddressThree.autoGrow = true;\n        }\n      });\n      this.vShippingStreet.ionChange.subscribe(() => {\n        if (this.vShippingStreet.autoGrow == false) {\n          this.vShippingStreet.autoGrow = true;\n        }\n      });\n      this.vShippingStreetNumber.ionChange.subscribe(() => {\n        if (this.vShippingStreetNumber.autoGrow == false) {\n          this.vShippingStreetNumber.autoGrow = true;\n        }\n      });\n      this.vShippingZip.ionChange.subscribe(() => {\n        if (this.vShippingZip.autoGrow == false) {\n          this.vShippingZip.autoGrow = true;\n        }\n      });\n      this.vShippingCity.ionChange.subscribe(() => {\n        if (this.vShippingCity.autoGrow == false) {\n          this.vShippingCity.autoGrow = true;\n        }\n      });\n    }\n  }\n  RegistrationFormPage.ɵfac = function RegistrationFormPage_Factory(t) {\n    return new (t || RegistrationFormPage)(i0.ɵɵdirectiveInject(i1.Downloads), i0.ɵɵdirectiveInject(i2.Toast), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.ConnApiService), i0.ɵɵdirectiveInject(i6.AlertController), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  RegistrationFormPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationFormPage,\n    selectors: [[\"app-registration-form\"]],\n    viewQuery: function RegistrationFormPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c8, 5);\n        i0.ɵɵviewQuery(_c9, 5);\n        i0.ɵɵviewQuery(_c10, 5);\n        i0.ɵɵviewQuery(_c11, 5);\n        i0.ɵɵviewQuery(_c12, 5);\n        i0.ɵɵviewQuery(_c13, 5);\n        i0.ɵɵviewQuery(_c14, 5);\n        i0.ɵɵviewQuery(_c15, 5);\n        i0.ɵɵviewQuery(_c16, 5);\n        i0.ɵɵviewQuery(_c17, 5);\n        i0.ɵɵviewQuery(_c18, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vName = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vNameDetails = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vStreet = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vStreetNumber = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vCity = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vZip = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vPrename = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vSurname = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vEmail = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vEmailCC = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vPhoneFixedLine = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vPhoneMobile = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vShippingAddressOne = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vShippingAddressTwo = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vShippingAddressThree = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vShippingStreet = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vShippingStreetNumber = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vShippingZip = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vShippingCity = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([Downloads, Alert])],\n    decls: 20,\n    vars: 0,\n    consts: [[\"slot\", \"start\"], [\"defaultHref\", \"login\"], [1, \"toolbar-subtitle\"], [\"slot\", \"end\", 1, \"toolbar-buttons-right\"], [\"fill\", \"clear\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"information-circle\", 1, \"toolbar-icon\"], [1, \"input-background\"], [1, \"text-head\"]],\n    template: function RegistrationFormPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n        i0.ɵɵelement(3, \"ion-back-button\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Handysammlerportal \");\n        i0.ɵɵelementStart(6, \"p\", 2);\n        i0.ɵɵtext(7, \"Registrierung als Sammler\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"ion-buttons\", 3)(9, \"ion-button\", 4);\n        i0.ɵɵlistener(\"click\", function RegistrationFormPage_Template_ion_button_click_9_listener() {\n          return ctx.onInfo();\n        });\n        i0.ɵɵelement(10, \"ion-icon\", 5);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(11, \"ion-content\", 6)(12, \"p\", 7);\n        i0.ɵɵtext(13, \"Leider k\\u00F6nnen wir aktuell keine weiteren Sammler in unser Sammmelsystem aufnehmen und m\\u00FCssen die Registrierfunktion daher deaktivieren. Wir bitten um euer Verst\\u00E4ndis. Eric & Till \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\")(15, \"br\")(16, \"br\")(17, \"br\")(18, \"br\")(19, \"app-footer\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [i6.IonBackButton, i6.IonButton, i6.IonButtons, i6.IonContent, i6.IonHeader, i6.IonIcon, i6.IonTitle, i6.IonToolbar, i6.IonBackButtonDelegate, i7.FooterComponent],\n    styles: [\"[_nghost-%COMP%]   .item-interactive.ion-invalid[_ngcontent-%COMP%]{--highlight-background: #dcdcdc !important;--highlight-height: 0px;--border-color: #dcdcdc !important}[_nghost-%COMP%]   .item-interactive.ion-valid[_ngcontent-%COMP%]{--highlight-background: #dcdcdc !important;--highlight-height: 0px;--border-color: #dcdcdc !important}.button-register[_ngcontent-%COMP%]{margin-bottom:50px}.end[_ngcontent-%COMP%]{align-items:flex-end}\"]\n  });\n  return RegistrationFormPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
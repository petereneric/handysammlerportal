{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  }),\n  observe: 'response'\n};\nexport let ConnApiService = /*#__PURE__*/(() => {\n  class ConnApiService {\n    constructor(http) {\n      this.http = http;\n      this.urlApi = 'https://www.svp-api.com/api/public/index.php/';\n      this.urlServer = 'https://www.svp-api.com/';\n    }\n    get(url) {\n      return this.http.get(`${this.urlApi}${url}`, httpOptions);\n    }\n    safeGet(url) {\n      var httpOptionsToken = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }).set('Authorization', `Bearer ${localStorage.getItem('token')}`),\n        observe: 'response'\n      };\n      console.log(httpOptionsToken);\n      return this.http.get(`${this.urlApi}${url}`, httpOptionsToken);\n    }\n    post(url, json) {\n      console.log(url);\n      return this.http.post(`${this.urlApi}${url}`, json, httpOptions);\n    }\n    safePost(url, json) {\n      var httpOptionsToken = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }).set('Authorization', `Bearer ${localStorage.getItem('token')}`),\n        observe: 'response'\n      };\n      return this.http.post(`${this.urlApi}${url}`, json, httpOptionsToken);\n    }\n    safePut(url, json) {\n      var httpOptionsToken = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }).set('Authorization', `Bearer ${localStorage.getItem('token')}`),\n        observe: 'response'\n      };\n      return this.http.put(`${this.urlApi}${url}`, json, httpOptionsToken);\n    }\n    safeUpload(url, data) {\n      var httpOptionsToken = {\n        headers: new HttpHeaders().set('Authorization', `Bearer ${localStorage.getItem('token')}`),\n        observe: 'response'\n      };\n      return this.http.post(`${this.urlApi}${url}`, data, httpOptionsToken);\n    }\n    safeGetFile(url) {\n      return this.http.get(`${this.urlApi}${url}`, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }).set('Authorization', `Bearer ${localStorage.getItem('token')}`),\n        responseType: 'blob'\n      });\n    }\n    getFile(url) {\n      return this.http.get(`${this.urlApi}${url}`, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }),\n        responseType: 'blob'\n      });\n    }\n    safePostPDF(url, data) {\n      return this.http.post(`${this.urlApi}${url}`, data, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }).set('Authorization', `Bearer ${localStorage.getItem('token')}`),\n        responseType: 'blob'\n      });\n    }\n    safeDownload(url) {\n      return this.http.get(`${this.urlApi}${url}`, {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }).set('Authorization', `Bearer ${localStorage.getItem('token')}`),\n        responseType: 'blob'\n      });\n    }\n    safeDelete(url) {\n      var httpOptionsToken = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }).set('Authorization', `Bearer ${localStorage.getItem('token')}`),\n        observe: 'response'\n      };\n      return this.http.delete(`${this.urlApi}${url}`, httpOptionsToken);\n    }\n  }\n  // Registration\n  ConnApiService.getCollectorTypes = 'registration/collection-types';\n  ConnApiService.ɵfac = function ConnApiService_Factory(t) {\n    return new (t || ConnApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ConnApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConnApiService,\n    factory: ConnApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ConnApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
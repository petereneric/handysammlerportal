{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../conn-api/conn-api.service\";\nimport * as i3 from \"../auth-api/auth-api.service\";\nimport * as i4 from \"@angular/router\";\nexport let CookieGuardService = /*#__PURE__*/(() => {\n  class CookieGuardService {\n    constructor(alert, toastController, api, authApiService, router) {\n      this.alert = alert;\n      this.toastController = toastController;\n      this.api = api;\n      this.authApiService = authApiService;\n      this.router = router;\n      // Urls\n      this.urlPrivacyPolicy = 'agreement/privacy_policy/';\n    }\n    canActivate(r) {\n      console.log(\"cookie!\");\n      let bCookie = localStorage.getItem('bCookie');\n      if (bCookie == null || bCookie === 'false') {\n        this.dialogCookie();\n        return true;\n      } else {\n        return true;\n      }\n    }\n    dialogCookie() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alert.create({\n          header: 'Cookies',\n          message: 'Wir, bei uns im Handysammler-Portal, nutzen keine Cookies zur Speicherung oder Verarbeitung deiner Daten. Du musst deren Nutzung also nicht zustimmen.',\n          cssClass: 'my-alert',\n          buttons: [{\n            text: 'Ok',\n            handler: () => {\n              localStorage.setItem('bCookie', 'true');\n            }\n          }, {\n            text: 'Weitere Informationen',\n            handler: () => {\n              this.onPrivacyPolicy();\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n    onPrivacyPolicy() {\n      this.api.getFile(this.urlPrivacyPolicy + 1).subscribe(response => {\n        console.log(response);\n        let blob = new Blob([response], {\n          type: 'application/pdf'\n        });\n        const url = window.URL.createObjectURL(blob);\n        window.open(url);\n      });\n    }\n  }\n  CookieGuardService.ɵfac = function CookieGuardService_Factory(t) {\n    return new (t || CookieGuardService)(i0.ɵɵinject(i1.AlertController), i0.ɵɵinject(i1.ToastController), i0.ɵɵinject(i2.ConnApiService), i0.ɵɵinject(i3.AuthApiService), i0.ɵɵinject(i4.Router));\n  };\n  CookieGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CookieGuardService,\n    factory: CookieGuardService.ɵfac,\n    providedIn: 'root'\n  });\n  return CookieGuardService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}